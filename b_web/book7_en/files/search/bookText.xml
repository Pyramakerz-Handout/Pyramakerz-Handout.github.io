<?xml version="1.0" encoding="utf-8"?><Search><pages Count="20"><page Index="1"><![CDATA[Web






        DEVELOPMENT



                                              PART: 7]]></page><page Index="2"><![CDATA[Web


       DEVELOPMENT








             Introduction:




             In this session. You will delve into the structure of web
             pages by exploring semantic and non-semantic elements,
             and  master  the  art  of  layout  through  padding,  margin,

             and display properties. In addition, you will create two
             complete HTML and CSS projects, applying their newfound
             knowledge to build functional and visually appealing web
             pages.















                                                               Learning Outcomes:






                                                                .  1 Semantic Elements.


                                                               2 .  Padding and Margin.


                                                               3 .  CSS Display Property.


























                                                                                                              2]]></page><page Index="3"><![CDATA[Web


                                                                                         DEVELOPMENT








         Semantic & Non-Semantic Elements:


         In <div> containers, We don’t know if this can be used as a title or body.



































         We have to open the code (render it) on a browser to know its use.












          .  1 Semantic Elements: Clearly defines its content.
             Used to guide developers to the content of
             web  pages  without  the  need  to  render  it.



         2 .  They make code easier to debug.














         3]]></page><page Index="4"><![CDATA[Web


       DEVELOPMENT






         <table>: defines that the content is a table.


         <header>: t defines a header for a web page.


         <nav>: It defines a container for navigation links.



         <section>: This defines a section in a web page.


         <article>:  This  element  contains  the  main  part,
         containing  information  about  the  web  page.


         <aside>: The <aside> content is often placed as a sidebar
         in a document.


         <footer>: It defines a footer for a document or a section.









         Padding & Margins:



         Then use these visualizations to define the types of spacings.


         Paddings: define the spacings inside the content.
         Margins: define the spacings outside the content.







                                                        Can you see these spacings?




















                                                                                                              4]]></page><page Index="5"><![CDATA[Web


                                                                                         DEVELOPMENT





         Syntax:



         •  Syntax is written in an order sequence.
           •  1st number defines the top.
           •  2nd number defines the right.
           •  3rd number defines the bottom.
           •  4th number defines the left.









                                                                      Top      Bottom

                                                       Syntax:
                                                       padding: 1px 2px 3px 4px;




                                                                      Right         Left









                            Top      Bottom

              Syntax:
              margin: 1px 2px 3px 4px;




                            Right        Left
























         5]]></page><page Index="6"><![CDATA[Web


       DEVELOPMENT






         Project: Store 101:



         Goal is to build a similar design to this.































         Let’s break it down: Begin with the HTML:




                                                             <header>

                                                               <nav>






                                                <section>





                                                 <footer>


















                                                                                                              6]]></page><page Index="7"><![CDATA[Web


                                                                                         DEVELOPMENT






         Write the html code:

















































         Now add the CSS Styling.





























         7]]></page><page Index="8"><![CDATA[Web


       DEVELOPMENT









         Display in CSS:


         The display property is used to specify how an element is shown on a web page.
         Every  HTML  element  has  a  default  display  value,  depending  on  what  type  of

         element it is. The default display value for most elements is block or inline .

         Block Display:



         Displays an element as a block element (like <p>). It starts on a new line, and
         takes up the whole width.



         Example:





















































                                                                                                              8]]></page><page Index="9"><![CDATA[Web


                                                                                         DEVELOPMENT









           Inline Display:


           The display option of inline tells the element to fit itself on the same line.





           Example:


































































         9]]></page><page Index="10"><![CDATA[Web


       DEVELOPMENT







         Flex Display:


         The display option allows you to create flexible layouts

         with elements that you can align and distribute
         vertically  or  horizontally.













































                                                            At first, It may look as inline display.























                                                                                                              10]]></page><page Index="11"><![CDATA[Web


                                                                                         DEVELOPMENT







         Flex box gives us the some tools to use to better align items

         justify-content:



         It helps us align items on the x-axis of the container.
















































         space-around





















        11]]></page><page Index="12"><![CDATA[Web


       DEVELOPMENT






         Other values can also be used:





            space-around








           space-between








                center






         align-items:



         It helps us align items on the y-axis of the
         container.






































                                                                                                              12]]></page><page Index="13"><![CDATA[Web


                                                                                         DEVELOPMENT






         Note: You can combine justify-content & align-items to make custom layouts and
         awesome ordering.
























         Other values can also be used:



                                 Start                                            End




















                                Center                                          Stretch

























        13]]></page><page Index="14"><![CDATA[Web


       DEVELOPMENT







         Project: Store 102:


         Let’s practice the use of display layouts and build a more appealing store like this:































          Let’s break the page into smaller parts:




         Flex Header








                                                                                         padding








                          Flex Footer
















                                                                                                              14]]></page><page Index="15"><![CDATA[Web


                                                                                         DEVELOPMENT







         Solution:


         First, Build the navbar.











































































        15]]></page><page Index="16"><![CDATA[Web


       DEVELOPMENT




         Result:










         That’s one part done:


         •  Built a navbar using <nav> semantic tag.
         •  Inserted an image and a list with some links inside it.
         •  We set the <nav> to display as flex and set its inner elements to be distribute on
            x-axis using “justify-content: space-around;”.

         •  We get to know about a new CSS property:
            •  list-style: none;
            •  This lets us remove bullets or numbers from the lists.
         •  We also added some padding to the list items to make it more appealing to the
            eyes.










         Now to the main body:








                                                               break <br>
                                                   Used to add a new line within
                                                             the same tag























                                                                                                              16]]></page><page Index="17"><![CDATA[Web


                                                                                         DEVELOPMENT


































         Result:





         That’s one part done:


         •  Built another semantic area <section> to welcome our users, and invite them to
            view our products
         •  We also placed an image for decoration and grouped both elements inside a flex
            element that aligns the elements on the center of x-axis.



































        17]]></page><page Index="18"><![CDATA[Web


       DEVELOPMENT








         Finally, the footer:














































































                                                                                                              18]]></page><page Index="19"><![CDATA[Web


                                                                                         DEVELOPMENT








         Result:






































         Finally:


         •  Built the last semantic area <footer> to display our contact number
         •  we also used “align-items:center;” to align our paragraph tag to the center of
            y-axis of the footer.






























        19]]></page><page Index="20"><![CDATA[Web


           Web                                                                                                                 DEVELOPMENT







           DEVELOPMENT













































































                                                                                ALEXANDRIA:
                                                0122 001 6331                   ELWEZARAH, 509 ABU QIR ST. 3RD FLOOR
                                                                                CAIRO:
                                                INFO@PYRAMAKERZ.COM             40 AHMED FAKHRY ST. NASR CITY]]></page></pages></Search>