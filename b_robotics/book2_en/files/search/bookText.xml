<?xml version="1.0" encoding="utf-8"?>
<Search><pages Count="21"><page Index="1"><![CDATA[]]></page><page Index="2"><![CDATA[Introduction:





                                     Welcome  back,  our  hero,  to  our  exciting  journey  of

                                     learning how to build robots!



                                     Last time, we learned the basics of electronics. Do you

                                     remember  how  we  connected  a  simple  circuit  to  light

                                     up an LED? It was a fantastic experience! Let's review
                                     what we did:







                                                     This  was  the  circuit  we  connected  last

                                                     time:



                                                     In this circuit, we controlled the on and off

                                                     operation of the LED using a switch, with a
                                                     resistor  to  protect  the  LED  from  burning

                                                     out.









                But what if we want the circuit to be smarter?




                Can this circuit control itself? For example, does it
                light up for a second and then turn off for a second,

                or does it activate multiple LEDs in sequence like a
                traffic light?





                           PAGE: 2]]></page><page Index="3"><![CDATA[Here  we  need  a  new  element  in  the  circuit,  acting  like  the  brain  that
             controls all connected components. This element is the Arduino, which in

             the  world  of  robotics  also  represents  the  robot's  brain  that  thinks  and

             makes decisions.







                                                                                        Arduino:






                                            ARDUINO  IS  A  SMALL  COMPUTER  THAT  I  CAN
                                            PROGRAM  TO  PERFORM  VARIOUS  TASKS  AND

                                            INTERACT  WITH  EXTERNAL  COMPONENTS.

                                            WITH  THE  ARDUINO,  I  CAN  CREATE  ENDLESS
                                            PROJECTS  BY  CONNECTING  IT  TO  OTHER

                                            COMPONENTS AND IT CONTROLLING THEM.









           Examples of projects I can create using Arduino:



               Smart Home:
           Using  Arduino,  I  can  control  all  the  devices  in  the  house  and
           make  them  work  intelligently.  I  can  turn  lights  on  and  off,
           operate the air conditioning, and control devices via my phone
           or program them to operate at suitable times.

















                           PAGE: 3]]></page><page Index="4"><![CDATA[Robot:

             I can build a robot to help me with some tiring or
             dangerous  tasks,  or  even  for  entertainment.  The

             robot can perform tasks like cleaning the house or

             carrying objects.









                                                Self-driving Car:
                                           I can create a small vehicle capable of making its

                                           own  decisions,  such  as  avoiding  obstacles,

                                           following a specific path, or reaching a particular
                                           destination.










                                                Thinking questions:
                                                How can your robot help you in your daily life?






























                           PAGE: 4]]></page><page Index="5"><![CDATA[How does
                                                                                  Arduino work?







                  Arduino  is  a  type  of  "microcontroller."  This  is  the  smart  component

                  capable  of  reading  signals  and  commands,  processing  them,  and

                  converting them into signals to control other components. Simply put,
                  it is the mastermind that makes the project work.




                  To give Arduino commands and tell it what to do, we need to program
                  it.  Programming  means  writing  a  set  of  simple  instructions  that  tell

                  Arduino how to behave.
















































                           PAGE: 5]]></page><page Index="6"><![CDATA[Exploring

                                                                           the Arduino Board:





                                                  When you look at the Arduino board, you will

                                                  find small places called pins located on both
                                                  sides of the Arduino. These places are where

                                                  we connect components such as LEDs so that

                                                  we can control them.






            Note:

            The type of Arduino shown in the picture is called Arduino Uno, but there
            are other types as well. However, there are many pins in the Arduino and

            also other things inside it. Let's get to know them.










































                           PAGE: 6]]></page><page Index="7"><![CDATA[1. Programming Port:

                                                         This is where we connect the Arduino to

                                                         the  computer  to  program  it.  All  you

                                                         need to do is connect the USB cable to
                                                         it when programming or testing.









                                           2. Power Plug:

                                           "This connection is specifically for supplying power

                                           to  the  Arduino  from  a  socket  using  an  adapter,
                                           knowing that the Arduino operates at 5 volts."






             3. Digital control pins:

             It is used to connect digital components that you want to control, such as

             LEDs.





             4. Power pins:


             "It's used to connect the Arduino to a battery or power other components.
             It  has  an  important  pin  called  Ground  (GND)  for  connecting  to  the

             ground."






             5. Analog control pin:

             It is used to connect components that send analog signals, which we will

             learn about later.






                           PAGE: 7]]></page><page Index="8"><![CDATA[NOW, LET'S TRY:
             We'll use Tinkercad not only to connect electronic components but also to

             simulate Arduino! Yes, we can program and test Arduino projects directly
             through Tinkercad.





































             Let's connect the LED to the Arduino:

               1.  Connect the LED's Positive Leg:

               2.  Take a wire from the longer leg of the LED and plug it into any Digital
                  Pin  on  the  Arduino.  Remember  which  pin  you  use  to  use  in

                  programming later.

               3.  Connect the LED's Negative Leg.
               4.  Take another wire from the shorter leg of the LED and plug it into the

                  GND (Ground) pin on the Arduino.
               5.  Use a Resistor:

               6.  Make sure to put a resistor between the LED and the Digital Pin to

                  keep the LED safe. Use a resistor with a value of 330 ohms.








                           PAGE: 8]]></page><page Index="9"><![CDATA[Now that we've connected everything, how can we make it work and add

             some commands to the Arduino?
             Yes, we'll use programming. Click on "Code" to start programming.



































                           PAGE: 9]]></page><page Index="10"><![CDATA[You       will     now        open       the

                                                               programming  window,  which  is  a

                                                               drag-and-drop  area  containing
                                                               blocks  that  you  can  connect

                                                               together,  like  puzzles,  to  create
                                                               your commands.


































             Notice that there are main blocks in

             the  window:  "On  start"  and

             "Forever".  You  can  write  your  code
             inside these blocks.



             ON START" BLOCK:
             This runs only once at the beginning when the Arduino starts up. It's used

             to set up necessary configurations for the elements to work.


             "FOREVER" BLOCK:

             This executes actions continuously without stopping during the Arduino's

             operation.  It  represents  the  Arduino's  primary  function,  running
             continuously.



                           PAGE: 10]]></page><page Index="11"><![CDATA[Now, delete any code inside them by dragging it to the trash icon, to start

             writing our own code.












































             Of course! To turn on the LED, we need to set the connected pin to a high
             value (High), which makes the LED light up. So, we'll drag the "SET pin"

             block  and  place  it  inside  the  "Forever"  block.  Then,  we'll  specify  the  pin
             number you connected the LED to, set its value to "High", and place it in

             the "SET pin" block.
























                           PAGE: 11]]></page><page Index="12"><![CDATA[To turn off the circuit, all we need to do is set the pin to a low value (Low)

             instead of High.








































             LED BLINK:

             Now, we want the LED to turn on and off repeatedly.













                                  OFF                                            ON

















                           PAGE: 12]]></page><page Index="13"><![CDATA[To do that, we'll stack the blocks one below the other inside the "Forever" block.





































             If you do that, you'll find the LED staying constantly lit. But why is that?

             This is because of the speed of the Arduino, so we need to add a "Wait"

             block to make it pause for a moment.
             You'll find the "Wait" block inside the "Control" category at the top.









                                                To  achieve  this,  we'll  place  a  "SET  pin"
                                                command  to  turn  on  the  LED  with  a  "High"

                                                value, then a "wait" command to pause it for a
                                                few  moments  (the  duration  depends  on  your

                                                preference).  After  that,  we'll  add  another

                                                "digital SET pin" command to turn off the LED
                                                with a "Low" value, followed by another "wait"

                                                command to pause again before repeating the

                                                process.



                           PAGE: 13]]></page><page Index="14"><![CDATA[Now, let's connect 2 LEDs instead of one, and we want them to light up

             and turn off in opposite patterns.

             To connect them, you can do the following:
                  Connect  the  positive  (+)  leg  of  the  first  LED  to  a  digital  pin  on  the

                  Arduino, like Pin 7.
                  Connect the positive (+) leg of the second LED to another digital pin,

                  like Pin 10.

                  Connect the negative (-) leg of both LEDs to the GND (Ground) pin on
                  the Arduino.




























             With this setup, we have connected 2 LEDs, and we'll program the Arduino
             to control them in an alternating pattern where one is on while the other is

             off, and then they switch states.


























                           PAGE: 14]]></page><page Index="15"><![CDATA[THE CODE:

                                                         After  connecting  the  circuits,  we  need
                                                         to write the code. Inside a "forever" loop

                                                         to repeat the following steps:

                                                              Turn  on  the  first  LED  and  turn  off
                                                              the  second  for  a  certain  period  of

                                                              time.
                                                              Turn  off  the  first  LED  and  turn  on

                                                              the  second  for  the  same  period  of

                                                              time. We'll add a "Wait" command
                                                              to  ensure  the  LEDs  change  at  an

                                                              observable rate. We can set a delay

                                                              between changes, for example, one
                                                              second for each of the LEDs.




            TRAFFIC LIGHT:

            Now, let's get started and connect 3 LEDs to the Arduino to create a traffic

            light. The circuit is now connected as shown in the picture.

































                           PAGE: 15]]></page><page Index="16"><![CDATA[I  THINK  YOU'RE  NOW  READY  TO  EASILY  CONNECT  THEM.  NOW,  IT'S
                 TIME FOR THE CODE:

                 OUR  CODE  WILL  OPERATE  THREE  LEDS  IN  SEQUENCE,  SIMULATING  A
                 TRAFFIC SIGNAL. LET'S WALK THROUGH STEP BY STEP WHAT THE CODE

                 DOES:

                      THE RED LED TURNS ON FOR ONE SECOND AND THEN TURNS OFF.
                      NEXT, THE YELLOW LED TURNS ON FOR ONE SECOND, FOLLOWED BY

                      TWO QUICK BLINKS.

                      FINALLY, THE GREEN LED TURNS ON FOR ONE SECOND AND THEN
                      TURNS OFF.


























































                          PAGE: 16]]></page><page Index="17"><![CDATA[I THINK YOU ARE NOW ABLE TO CONNECT THEM EASILY. HERE ARE THE STEPS FOR
           THE CODE:


               TURN ON THE RED LED:

                    USE "SET PIN 12 TO HIGH" TO TURN ON THE LED CONNECTED TO PIN 12 (RED
                    LIGHT).
                    WAIT FOR ONE SECOND USING "WAIT".



               TURN OFF THE RED LED:
                    USE "SET PIN 12 TO LOW" TO TURN OFF THE LED CONNECTED TO PIN 12.
                    WAIT FOR ONE SECOND USING "WAIT".



                TURN ON THE YELLOW LED:
                    USE  "SET  PIN  11  TO  HIGH"  TO  TURN  ON  THE  LED  CONNECTED  TO  PIN  11

                    (YELLOW LIGHT).
                    WAIT FOR ONE SECOND USING "WAIT".


               TURN OFF THE YELLOW LED:

                    USE "SET PIN 11 TO LOW" TO TURN OFF THE LED CONNECTED TO PIN 11.
                    WAIT  FOR  ONE  SECOND  USING  "WAIT".  REPEAT  THE  ABOVE  PROCESS  ONE
                    MORE TIME.



               TURN ON THE GREEN LED:
                    USE  "SET  PIN  10  TO  HIGH"  TO  TURN  ON  THE  LED  CONNECTED  TO  PIN  10
                    (GREEN LIGHT).

                    WAIT FOR ONE SECOND USING "WAIT".


               TURN OFF THE GREEN LED:

                    USE "SET PIN 10 TO LOW" TO TURN OFF THE LED CONNECTED TO PIN 10.
                    WAIT FOR ONE SECOND USING "WAIT".

















                           PAGE: 17]]></page><page Index="18"><![CDATA[HERE ARE PICTURES OF THE ACTUAL COMPONENTS:






                             Cable                                                   Led ـﻟا












                                                         Switch










                            كﻼﺳا                                                Resistor 330 ohm
































                                             NEXT TIME, WE WILL LEARN HOW TO

                                             CONNECT  THEM  IN  AN  EASY  AND

                                             SIMPLE WAY.







                           PAGE: 18]]></page><page Index="19"><![CDATA[Let’s play







           Bubble Throw game: Throw bubbles and match 3 or more of the

           same color.

































































                           PAGE: 19]]></page><page Index="20"><![CDATA[For STEAM

                      Education Solutions













































































                                                                   Alexandria:
                                                                   Elwezarah, 509 Abu Qir St. 3rd floor

                                                                   Cairo:
                                                                   40 Ahmed Fakhry St. Nasr City]]></page><page Index="21"/></pages></Search>
